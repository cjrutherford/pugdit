# Generated by Django 2.1 on 2018-08-09 16:20

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ipfs_hash', models.CharField(max_length=46, unique=True)),
                ('ipfs_paths', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, size=None)),
                ('users', models.ManyToManyField(related_name='pinned_assets', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Identity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_key', models.CharField(help_text='Base64 encoded key for verifying signatures', max_length=32, unique=True)),
                ('karma', models.IntegerField(default=0)),
                ('is_banned', models.BooleanField(default=False)),
                ('topic_subscriptions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), blank=True, default=list, size=None)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Nexus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peer_id', models.CharField(help_text='IPFS identity of the node', max_length=46)),
                ('karma', models.IntegerField(default=0)),
                ('is_banned', models.BooleanField(default=False)),
                ('last_manifest_path', models.CharField(blank=True, max_length=255)),
                ('last_sync', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to', models.CharField(db_index=True, max_length=512)),
                ('link', models.CharField(help_text='IPFS url containing the message', max_length=512)),
                ('signature', models.CharField(max_length=64)),
                ('received_timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_pinned', models.BooleanField(default=False)),
                ('karma', models.IntegerField(default=0)),
                ('chain_level', models.SmallIntegerField(db_index=True, default=0)),
                ('signer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='postoffice.Identity')),
                ('transmitted_nexus', models.ManyToManyField(blank=True, help_text='Nexus(es) that have transmitted this message', related_name='transmitted_posts', to='postoffice.Nexus')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('karma', models.SmallIntegerField()),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='postoffice.Post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='vote',
            unique_together={('user', 'post')},
        ),
        migrations.AlterUniqueTogether(
            name='post',
            unique_together={('to', 'link', 'signer')},
        ),
    ]
